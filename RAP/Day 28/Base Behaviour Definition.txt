managed implementation in class ZCL_ATS_00_M_TRAVEL unique; //implementation in class zbp_i_travel_m_00 unique;
//strict; //Comment this line in to enable strict mode. The strict mode is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for ZI_TRAVEL_M_00 alias Travel

persistent table /DMO/TRAVEL
lock master
//authorization master ( instance )
etag master lastchangedat
{
  create;
  update;
  delete;
  action createTravelByTemplate result [1] $self;

  // administrative fields: read only
  field ( readonly ) lastchangedat, lastchangedby, createdat, createdby;

  // mandatory fields that are required to create a travel
  field ( mandatory ) agency_id, status, booking_fee, currency_code;

  // dynamic field control
  field ( features : instance ) travel_id;

  // dynamic action control
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  validation validateCustomer on save { field customer_id; }
  validation validateDates on save { field begin_date, end_date; }
  validation validateStatus on save { field status; }
  association _Booking { create; }
}

define behavior for ZI_BOOKING_M_00 alias Booking
implementation in class ZCL_ATS_00_M_Booking unique
persistent table /DMO/BOOKING
lock dependent by _Travel
//authorization dependent by _Travel
etag master lastchangedat
{

  update;
  delete;
  // static field control
  field ( mandatory ) carrier_id, connection_id, flight_date;
  field ( readonly ) travel_id;

  // dynamic field control
  field ( features : instance ) booking_id, booking_date, customer_id;

  determination calculateTotalFlightPrice on modify { field flight_price, currency_code; create; }

  association _Travel;
}